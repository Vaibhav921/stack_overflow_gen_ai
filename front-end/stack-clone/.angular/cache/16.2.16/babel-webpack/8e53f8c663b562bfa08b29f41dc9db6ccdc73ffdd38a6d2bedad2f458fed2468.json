{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./answer.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const answer_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(answer_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(answer_r2.body);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(answerService) {\n      this.answerService = answerService;\n      this.question = '';\n      this.answers = [];\n      this.useAISort = false;\n      this.loading = false;\n    }\n    search() {\n      this.loading = true;\n      this.answerService.getAnswers(this.question, this.useAISort).subscribe({\n        next: data => {\n          this.answers = data;\n          this.loading = false;\n        },\n        error: err => {\n          console.error('Error fetching answers', err);\n          this.loading = false;\n        }\n      });\n    }\n    toggleAISort() {\n      this.useAISort = !this.useAISort;\n      if (this.question.trim() !== '') {\n        this.search();\n      }\n    }\n    static {\n      this.ɵfac = function AppComponent_Factory(t) {\n        return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AnswerService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppComponent,\n        selectors: [[\"app-root\"]],\n        decls: 12,\n        vars: 4,\n        consts: [[2, \"padding\", \"20px\", \"max-width\", \"800px\", \"margin\", \"auto\"], [2, \"display\", \"flex\", \"gap\", \"10px\", \"margin-bottom\", \"10px\"], [\"placeholder\", \"Search...\", 2, \"flex\", \"1\", \"padding\", \"8px\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"gap\", \"8px\", \"margin-bottom\", \"15px\"], [\"type\", \"toggle\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [4, \"ngIf\"], [\"style\", \"border-bottom: 1px solid #ccc; margin-bottom: 10px; padding-bottom: 10px;\", 4, \"ngFor\", \"ngForOf\"], [2, \"border-bottom\", \"1px solid #ccc\", \"margin-bottom\", \"10px\", \"padding-bottom\", \"10px\"]],\n        template: function AppComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"StackOverflow Clone\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 1)(4, \"input\", 2);\n            i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n              return ctx.question = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n              return ctx.search();\n            });\n            i0.ɵɵtext(6, \"Search\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"label\", 4)(8, \"input\", 5);\n            i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_8_listener($event) {\n              return ctx.useAISort = $event;\n            })(\"change\", function AppComponent_Template_input_change_8_listener() {\n              return ctx.toggleAISort();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(9, \" Sort with AI \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, AppComponent_div_10_Template, 2, 0, \"div\", 6);\n            i0.ɵɵtemplate(11, AppComponent_div_11_Template, 5, 2, \"div\", 7);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.question);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.useAISort);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.answers);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel]\n      });\n    }\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}